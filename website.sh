#!/bin/bash
#Check out a website
curler(){  
if [ -z "$1" ]
	then
	echo "Put in one nmap friendly address e.g. http://192.168.1.1"
	
elif [[ $1 == *"http"* ]] #checks to see if "http" is anywhere in the $1 parameter, if so it executes code
then
	echo
	echo "--------------------- Header-Data-Begin ------------------------------"
	curl -i -k "$1"
	echo "---------------------- Header-Data-End -------------------------------"
	echo
	echo "-----------------Beginning Curl with html2text------------------------"
	curl -s -L -k "$1" | html2text -width '150' | uniq
	echo
	echo "----------------------------------------------------------------------"
	echo
	echo "Trying for robots.txt via curl..."
	echo
	curl -k "$1/robots"
	echo "----------------------------------------------------------------------"
	echo 
	gnome-terminal -e firefox; sleep 2; firefox "$1" 2>/dev/null;
	#gnome-terminal -e "gobuster -t 2 -u $1 -w /usr/share/wordlists/dirb/common.txt -e | tee gobuster-common" #doesn't show 403 and 500 codes... just a quick one to see what shows"
	gnome-terminal -e "dirb $1 /usr/share/wordlists/dirb/common.txt -z 100 -l -r -o dirb" 
	
	echo "$1">blah111.txt
	echo "Running nikto..."
	niktovar=$(cat blah111.txt | cut -d "/" -f 3)
	echo $niktovar  
	rm blah111.txt
	#nikto -h "$niktovar" -output "$niktovar-nikto.html";
	nikto -h "$1" -output "$niktovar.html";
	echo "-----------------------------------------------------------------------"
	echo
	#echo "Trying another Gobuster with cgi.txt..."
	#gnome-terminal -e "gobuster -u $1 -w /usr/share/wordlistsec/cgis.txt -e | tee gobuster-cgi" #this isn't saving correctly...
else
	echo "Put on http or https! e.g. http://192.168.1.1"	

	
	
fi
return 0
}
	

#CALLING curler FUNCTION
#Calling function to check if a parameter was passed. If nothing is passed this is skipped.
#
echo
curler "$1" 
